name: Integration Test

on:
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:
  push:
    branches:
      - "master"
      - "develop"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: |
         mkdir -p gui/frontend/dist
         touch gui/frontend/dist/index.html
         env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -tags headless .
         env CGO_ENABLED=0 GOOS=freebsd GOARCH=amd64 go build -tags headless .
         env CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -tags headless .
         env CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -tags headless .
  
#  tests:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.19
#      - name: Run Go tests
#        run: |
#          go test  -tags headless ./... -v
#        env:
#          DATABASE: sqlite
#      - name: Run GUI (React) tests
#        run: |
#          npm run test
#        working-directory: './gui/frontend'
#  
#  test-gui:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: recursive
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 19
#          cache: 'npm'
#      - uses: actions/setup-go@v3
#        with:
#          go-version: 1.19
#      - name: build gui 
#        run: |
#          cd gui/frontend/ && npm test
#
#  staticcheck:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.19
#      - name: Run Go tests
#        run: |
#          sudo apt update
#          go install honnef.co/go/tools/cmd/staticcheck@latest
#          { ~/go/bin/staticcheck  -tags=ee ./... ; }
#
#      - name: Run GUI (React) tests
#        run: |
#          npm run test
#        working-directory: './gui/frontend'
#
#  gui:
#    strategy:
#      fail-fast: false
#      matrix:
#        build: [
#          {name: guiLinux, platform: linux/amd64, os: ubuntu-latest},
#          {name: guiMac, platform: darwin/universal, os: macos-latest},
#          {name: guiFreebsd, platform: freebsd/amd64, os: ubuntu-latest}
#        ]
#    runs-on: ${{ matrix.build.os }}
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: recursive
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 19
#          cache: 'npm'
#      - uses: actions/setup-go@v3
#        with:
#          go-version: 1.19
#      - name: build gui 
#        run: |
#          cd gui/frontend/ && npm run build
#          go build -tags desktop,production -ldflags "-w -s"
#
#  windows:
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: recursive
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 19
#          cache: 'npm'
#      - uses: actions/setup-go@v3
#        with:
#          go-version: 1.19
#      - name: build gui 
#        run: |
#          cd gui/frontend/ && npm run build
#          go build -tags desktop,production -ldflags "-w -s -H windowsgui"

